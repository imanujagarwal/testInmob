package com.inmobi.sdk;

import android.annotation.SuppressLint;
import android.content.Context;
import com.inmobi.commons.core.d.c;
import com.inmobi.commons.core.utilities.b.g;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;






















final class a
{
  @SuppressLint({"SdCardPath"})
  public static boolean a(Context paramContext)
  {
    Object localObject1 = Arrays.asList(new String[] { "carbpreference", "IMAdMLtvpRuleCache", "inmobiAppAnalyticsSession", "aeskeygenerate", "impref", "IMAdTrackerStatusUpload", "IMAdMMediationCache", "inmobiAppAnalyticsAppId", "inmobiAppAnalyticsSession", "inmobisdkaid", "IMAdTrackerStatusUpload", "testAppPref" });
    


    for (int j = 0; j < ((List)localObject1).size(); j++)
    {
      File localFile;
      if ((localFile = new File("/data/data/" + paramContext.getPackageName() + "/shared_prefs/" + (String)((List)localObject1).get(j) + ".xml")).exists()) {
        localFile.delete();
      }
    }
    
    Object localObject2 = Arrays.asList(new String[] {
    


































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      c.a("carb_store"), 
      


      c.a("config_store"), 
      

































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      c.a("aes_key_store"), 
      





































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      c.a("mraid_js_store"), g.a() });
    for (int m = 0; m < ((List)localObject2).size(); m++)
    {

      if ((localObject1 = new File("/data/data/" + paramContext.getPackageName() + "/shared_prefs/" + (String)((List)localObject2).get(m) + ".xml")).exists()) {
        ((File)localObject1).delete();
      }
    }
    

    Object localObject3 = Arrays.asList(new String[] { "inmobi.cache", "inmobi.cache.data", "inmobi.cache.data.events.number", "inmobi.cache.data.events.timestamp" });
    
    for (int i = 0; i < ((List)localObject3).size(); i++) {
      if (paramContext.getCacheDir() != null)
      {
        if ((localObject2 = new File(paramContext.getCacheDir(), (String)((List)localObject3).get(i))).exists()) {
          ((File)localObject2).delete();
        }
      }
    }
    
    List localList = Arrays.asList(new String[] { "eventlog", "imai_click_events" });
    for (int k = 0; k < localList.size(); k++) {
      if (paramContext.getDir("data", 0) != null)
      {

        if ((localObject3 = new File(paramContext.getDir("data", 0), (String)localList.get(k))).exists()) {
          ((File)localObject3).delete();
        }
      }
    }
    
    return b(paramContext).size() != 0;
  }
  



  private static boolean a(Context paramContext, String paramString)
  {
    File localFile;
    

    return ((localFile = paramContext.getDatabasePath(paramString)) == null) || (!localFile.exists()) || (paramContext.deleteDatabase(paramString));
  }
  




















  public static List<String> b(Context paramContext)
  {
    ArrayList localArrayList = new ArrayList();
    

















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































    HashSet localHashSet;
    

















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































    (localHashSet = new HashSet()).add("adcache.db");
    localHashSet.add("appengage.db");
    localHashSet.add("im.db");
    localHashSet.add("ltvp.db");
    localHashSet.add("analytics.db");
    

    localHashSet.add("com.im.db");
    String[] arrayOfString;
    if (((arrayOfString = paramContext.databaseList()) != null) && (arrayOfString.length > 0)) {
      for (String str : arrayOfString) {
        if ((localHashSet.contains(str)) && (!a(paramContext, str))) {
          localArrayList.add(str);
        } else if ((str.matches("com\\.im_([0-9]+\\.){3}db")) && 
          (!str.equals(com.inmobi.commons.core.d.a.a)) && (!a(paramContext, str))) {
          localArrayList.add(str);
        }
      }
    }
    
    return localArrayList;
  }
}
